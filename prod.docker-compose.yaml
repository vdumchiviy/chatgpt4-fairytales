version: "3.7"

# networks:
#   private:
#   proxy:
#     external: true
# env_file:
#   - .env_server
# environment:
#   - ADDRESS=${ADDRESS}
#   - BACKEND_PORT=${BACKEND_PORT}
#   - BACKEND_URL=${ADDRESS}+':'+${BACKEND_PORT}
#   - FRONTEND_PORT=${FRONTEND_PORT}
#   - FRONTEND_URL=${ADDRESS}+':'+${FRONTEND_PORT}

services:

  backend:
    image: vdumchiviy/fairytales_back_flask
    restart: unless-stopped
    container_name: "fairytales_backend"
    labels:
      description: "Backend"
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - private     
    environment:
      - OPENAI_TOKEN=${OPENAI_TOKEN}
      - OPENAI_ORGID=${OPENAI_ORGID}
      - DEBUG=${DEBUG}
    # command: "sh -c 'export FLASH_RUN_PORT=8000 && python ./backend_flask/run_webserver.py --host 0.0.0.0 --port 8000'"
    command: "sh -c 'export FLASK_RUN_PORT=8000 && flask --app ./backend_flask/run_webserver.py run --host 0.0.0.0 --port 8000'"

  frontend:
    image: vdumchiviy/fairytales_front_react
    container_name: "fairytales_frontend"
    labels:
      description: "Frontend"
      NGINX_PROXY: 1
    environment:
      - ADDRESS=${ADDRESS}
      - BACKEND_PORT=${BACKEND_PORT}
      - BACKEND_URL=${ADDRESS}:${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - FRONTEND_URL=${ADDRESS}:{FRONTEND_PORT}
      - REACT_APP_ADDRESS=${ADDRESS}
      - REACT_APP_BACKEND_PORT=${BACKEND_PORT}
      - REACT_APP_BACKEND_URL=${ADDRESS}:${BACKEND_PORT}
      - REACT_APP_FRONTEND_PORT=${FRONTEND_PORT}
      - REACT_APP_FRONTEND_URL=${ADDRESS}:{FRONTEND_PORT}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - backend
    networks:
      - private
    volumes:
      # - ./media:/app/build//www/frontend/media:ro
      - ./static:/app/build/static

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    # environment:
    #   - VIRTUAL_HOST=${DOMAIN_NAME}
    #   - LETSENCRYPT_HOST=${DOMAIN_NAME}
    depends_on:
      - backend
      - frontend
    volumes:
      # - ./media:/var/www/frontend/media:ro
      # - ./static:/var/www/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs:/var/log/nginx
    ports:
      - 80:80
    networks:
      - private
      # - proxy

networks:
  private:
    driver: bridge

# docker network create proxy
# docker-compose -f prod.docker-compose.yaml up  

